package org.etri.slice.rules.car;

import org.etri.slice.commons.car.context.BodyPartLength;
import org.etri.slice.commons.car.context.HumanInfo;
import org.etri.slice.commons.car.context.Pressure;
import org.etri.slice.commons.car.context.SleepDetect;
import org.etri.slice.commons.car.event.FaceDetected;
import org.etri.slice.commons.car.event.FullBodyDetected;
import org.etri.slice.commons.car.event.SleepDetected;
import org.etri.slice.commons.car.event.UserSeated;
import org.etri.slice.commons.car.event.UserLeft;
import org.etri.slice.commons.car.service.HandySoft;

global HandySoft handySoft;

rule "FullBody Detection Notificiation"
	when
		$e: BodyPartLength()
	then
		channels["full_body_detected"].send(new FullBodyDetected($e));
end

rule "UserSeated Notification"
	when
		$e1: BodyPartLength()
		$e2: Pressure(value > 50, this meets[3s] $e1)
	then
		channels["user_seated"].send(new UserSeated($e1, $e2));
end

rule "UserLeft Notification"
	when
		$e1: Pressure(value < 50)
	then
		channels["user_left"].send(new UserLeft(new BodyPartLength(0,0)));
end

rule "SleepDetected Notificiation"
	when
		$e: SleepDetect()
	then
		channels["sleep_detected"].send(new SleepDetected($e));
end

rule "FaceDetection Notificiation"
	when
		$e: HumanInfo()
	then
		channels["face_detected"].send(new FaceDetected($e));
end

rule "Drowsy Notification - 1.5 second"
	when
		$e: SleepDetect(elapsedTime > 1, elapsedTime < 2)
	then
		handySoft.setDrowsy(1);
end

rule "Drowsy Notification - 3 second"
	when
		$e: SleepDetect(elapsedTime > 2.5, elapsedTime < 3.5)
	then
		handySoft.setDrowsy(2);
end

rule "Drowsy Notification - 4.5 second"
	when
		$e: SleepDetect(elapsedTime > 4, elapsedTime < 5)
	then
		handySoft.setDrowsy(3);
end

rule "Drowsy Notification - more than 5.5 seconds"
	when
		$e: SleepDetect(elapsedTime > 5)
	then
		handySoft.setDrowsy(4);
end
